name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Install dependencies and setup caching
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    outputs:
      node-cache-key: ${{ steps.cache-keys.outputs.node }}
      python-cache-key: ${{ steps.cache-keys.outputs.python }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Generate cache keys
        id: cache-keys
        run: |
          echo "node=node-modules-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT
          echo "python=python-deps-${{ hashFiles('**/pyproject.toml') }}" >> $GITHUB_OUTPUT

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            mobile/node_modules
            web/node_modules
          key: ${{ steps.cache-keys.outputs.node }}
          restore-keys: |
            node-modules-

      - name: Install Node dependencies
        run: npm ci

      - name: Install workspace dependencies
        run: |
          npm run install:mobile
          npm run install:web

  # Code quality checks for TypeScript/JavaScript
  code-quality:
    name: Code Quality (TS/JS)
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Restore Node modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            mobile/node_modules
            web/node_modules
          key: ${{ needs.install.outputs.node-cache-key }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: |
          npm ci
          npm run install:mobile
          npm run install:web

      - name: Check code formatting
        run: npm run format:check

      - name: Run linting
        run: npm run lint

      - name: Type checking
        run: npm run type-check

  # Build verification for all apps
  build:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: install
    strategy:
      matrix:
        app: [web, shared]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Restore Node modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            mobile/node_modules
            web/node_modules
          key: ${{ needs.install.outputs.node-cache-key }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: |
          npm ci
          npm run install:mobile
          npm run install:web

      - name: Build ${{ matrix.app }}
        run: npm run build --workspace=${{ matrix.app }}

  # Mobile-specific checks (Expo)
  mobile:
    name: Mobile App (Expo)
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Restore Node modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            mobile/node_modules
            web/node_modules
          key: ${{ needs.install.outputs.node-cache-key }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: |
          npm ci
          npm run install:mobile

      - name: Type check mobile app
        run: npm run type-check --workspace=mobile

      - name: Check mobile app format
        run: npm run format:check --workspace=mobile

      - name: Validate Expo configuration
        working-directory: mobile
        run: expo doctor

  # Python backend checks
  backend:
    name: Backend (FastAPI)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV
        run: pip install uv

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: api/.venv
          key: ${{ needs.install.outputs.python-cache-key }}
          restore-keys: |
            python-deps-

      - name: Install dependencies
        run: uv sync

      - name: Code formatting check (Black)
        run: uv run black --check src/

      - name: Import sorting check (isort)
        run: uv run isort --check-only src/

      - name: Linting (Ruff)
        run: uv run ruff check src/

      - name: Type checking (mypy)
        run: uv run mypy src/

      - name: Run tests
        run: uv run pytest

  # Tests (if any exist)
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install
    if: false # Enable when tests are added
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Restore Node modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            mobile/node_modules
            web/node_modules
          key: ${{ needs.install.outputs.node-cache-key }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        run: |
          npm ci
          npm run install:mobile
          npm run install:web

      - name: Run tests
        run: npm run test
