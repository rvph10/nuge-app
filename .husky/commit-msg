echo "📝 Nuge Commit Message: Validating commit message format..."

# Run commitlint to validate commit message
npx --no-install commitlint --edit "$1"

# Check if commitlint succeeded
if [ $? -ne 0 ]; then
  echo ""
  echo "❌ COMMIT BLOCKED: Invalid commit message format!"
  echo ""
  echo "💡 What happened:"
  echo "   • Your commit message doesn't follow the conventional commit format"
  echo ""
  echo "🔧 Required format:"
  echo "   <type>(<scope>): <description>"
  echo ""
  echo "📋 Valid types for Nuge project:"
  echo "   • feat:     New feature"
  echo "   • fix:      Bug fix"  
  echo "   • docs:     Documentation changes"
  echo "   • style:    Code style changes (formatting, etc.)"
  echo "   • refactor: Code refactoring"
  echo "   • perf:     Performance improvements"
  echo "   • test:     Adding or updating tests"
  echo "   • chore:    Maintenance tasks"
  echo "   • ci:       CI/CD changes"
  echo "   • build:    Build system changes"
  echo ""
  echo "🏗️  Workspace-specific types:"
  echo "   • mobile:   Mobile app changes"
  echo "   • web:      Web app changes" 
  echo "   • api:      Backend API changes"
  echo "   • shared:   Shared code changes"
  echo "   • db:       Database changes"
  echo "   • deploy:   Deployment changes"
  echo ""
  echo "✅ Good examples:"
  echo "   feat(mobile): add geolocation for vendor search"
  echo "   fix(api): resolve user authentication issue"
  echo "   docs: update setup instructions in README"
  echo "   chore: update dependencies"
  echo ""
  echo "⚡ To bypass this check (not recommended):"
  echo "   git commit --no-verify -m \"your message\""
  echo ""
  exit 1
fi

echo "✅ Commit message format is valid!"
echo "" 